// Generated by gencpp from file discovery/discover.msg
// DO NOT EDIT!


#ifndef DISCOVERY_MESSAGE_DISCOVER_H
#define DISCOVERY_MESSAGE_DISCOVER_H

#include <ros/service_traits.h>


#include <discovery/discoverRequest.h>
#include <discovery/discoverResponse.h>


namespace discovery
{

struct discover
{

typedef discoverRequest Request;
typedef discoverResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct discover
} // namespace discovery


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::discovery::discover > {
  static const char* value()
  {
    return "92972308c7fadb3f91e8ad956494a137";
  }

  static const char* value(const ::discovery::discover&) { return value(); }
};

template<>
struct DataType< ::discovery::discover > {
  static const char* value()
  {
    return "discovery/discover";
  }

  static const char* value(const ::discovery::discover&) { return value(); }
};


// service_traits::MD5Sum< ::discovery::discoverRequest> should match
// service_traits::MD5Sum< ::discovery::discover >
template<>
struct MD5Sum< ::discovery::discoverRequest>
{
  static const char* value()
  {
    return MD5Sum< ::discovery::discover >::value();
  }
  static const char* value(const ::discovery::discoverRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::discovery::discoverRequest> should match
// service_traits::DataType< ::discovery::discover >
template<>
struct DataType< ::discovery::discoverRequest>
{
  static const char* value()
  {
    return DataType< ::discovery::discover >::value();
  }
  static const char* value(const ::discovery::discoverRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::discovery::discoverResponse> should match
// service_traits::MD5Sum< ::discovery::discover >
template<>
struct MD5Sum< ::discovery::discoverResponse>
{
  static const char* value()
  {
    return MD5Sum< ::discovery::discover >::value();
  }
  static const char* value(const ::discovery::discoverResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::discovery::discoverResponse> should match
// service_traits::DataType< ::discovery::discover >
template<>
struct DataType< ::discovery::discoverResponse>
{
  static const char* value()
  {
    return DataType< ::discovery::discover >::value();
  }
  static const char* value(const ::discovery::discoverResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DISCOVERY_MESSAGE_DISCOVER_H
