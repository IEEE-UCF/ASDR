// Generated by gencpp from file rotary_encoder/get_rotary_encoder.msg
// DO NOT EDIT!


#ifndef ROTARY_ENCODER_MESSAGE_GET_ROTARY_ENCODER_H
#define ROTARY_ENCODER_MESSAGE_GET_ROTARY_ENCODER_H

#include <ros/service_traits.h>


#include <rotary_encoder/get_rotary_encoderRequest.h>
#include <rotary_encoder/get_rotary_encoderResponse.h>


namespace rotary_encoder
{

struct get_rotary_encoder
{

typedef get_rotary_encoderRequest Request;
typedef get_rotary_encoderResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct get_rotary_encoder
} // namespace rotary_encoder


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rotary_encoder::get_rotary_encoder > {
  static const char* value()
  {
    return "2cf6c2ef6d4814960f7bd2c448525593";
  }

  static const char* value(const ::rotary_encoder::get_rotary_encoder&) { return value(); }
};

template<>
struct DataType< ::rotary_encoder::get_rotary_encoder > {
  static const char* value()
  {
    return "rotary_encoder/get_rotary_encoder";
  }

  static const char* value(const ::rotary_encoder::get_rotary_encoder&) { return value(); }
};


// service_traits::MD5Sum< ::rotary_encoder::get_rotary_encoderRequest> should match
// service_traits::MD5Sum< ::rotary_encoder::get_rotary_encoder >
template<>
struct MD5Sum< ::rotary_encoder::get_rotary_encoderRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rotary_encoder::get_rotary_encoder >::value();
  }
  static const char* value(const ::rotary_encoder::get_rotary_encoderRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rotary_encoder::get_rotary_encoderRequest> should match
// service_traits::DataType< ::rotary_encoder::get_rotary_encoder >
template<>
struct DataType< ::rotary_encoder::get_rotary_encoderRequest>
{
  static const char* value()
  {
    return DataType< ::rotary_encoder::get_rotary_encoder >::value();
  }
  static const char* value(const ::rotary_encoder::get_rotary_encoderRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rotary_encoder::get_rotary_encoderResponse> should match
// service_traits::MD5Sum< ::rotary_encoder::get_rotary_encoder >
template<>
struct MD5Sum< ::rotary_encoder::get_rotary_encoderResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rotary_encoder::get_rotary_encoder >::value();
  }
  static const char* value(const ::rotary_encoder::get_rotary_encoderResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rotary_encoder::get_rotary_encoderResponse> should match
// service_traits::DataType< ::rotary_encoder::get_rotary_encoder >
template<>
struct DataType< ::rotary_encoder::get_rotary_encoderResponse>
{
  static const char* value()
  {
    return DataType< ::rotary_encoder::get_rotary_encoder >::value();
  }
  static const char* value(const ::rotary_encoder::get_rotary_encoderResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROTARY_ENCODER_MESSAGE_GET_ROTARY_ENCODER_H
